unit ReportDMUnit;

interface

uses
  SysUtils, Classes, RpCon, RpConDS, RpDefine, RpRave, DB, BoldDataSet, DBClient,
  Provider, RpRender, RpRenderRTF, RpBase, RpSystem, Dialogs,
  BoldVariableHandle, BoldOclVariables, BoldSubscription, BoldHandles,
  BoldRootedHandles, BoldAbstractListHandle, BoldCursorHandle, BoldListHandle,
  ADODB, DateUtils;

type
  TReportDM = class(TDataModule)
    RvProject: TRvProject;
    RvDataSetConnectionAllTaxSumm: TRvDataSetConnection;
    AllTaxSummBoldDataSet: TBoldDataSet;
    bdsDispatchActivity: TBoldDataSet;
    rdscOneTaxOnDaysMoving: TRvDataSetConnection;
    rdscDispatchActivity: TRvDataSetConnection;
    AllTaxSummCDS: TClientDataSet;
    AllTaxSummDataSetProvider: TDataSetProvider;
    RvRenderRTF: TRvRenderRTF;
    RvSystem: TRvSystem;
    NDROpenDialog: TOpenDialog;
    RvDataSetConnectionCustOnPeriod: TRvDataSetConnection;
    bdsDispStat: TBoldDataSet;
    dspDispStat: TDataSetProvider;
    cdsDispStat: TClientDataSet;
    rvdsJournal: TRvDataSetConnection;
    rvdsDispStat: TRvDataSetConnection;
    rvdsDrStat: TRvDataSetConnection;
    JournalADOQuery: TADOQuery;
    rdsArhiveReport: TRvDataSetConnection;
    rdsPresentsCust: TRvDataSetConnection;
    rdsArhiveReport2: TRvDataSetConnection;
    RvDataSetConnectionAggrDrInfo: TRvDataSetConnection;
    AggrDrReportADOQuery: TADOQuery;
    AggrDrRepDS: TDataSource;
    AllTaxSummDS: TDataSource;
    SMSRepADODS: TADODataSet;
    SMSRepRvDSC: TRvDataSetConnection;
    SMSRepDS: TDataSource;
    DrStateADODS: TADODataSet;
    DrStatesDS: TDataSource;
    DrStateADODSPozyvnoi_ustan: TIntegerField;
    DrStateADODSMunutesCount: TIntegerField;
    DrStateADODSDeltaStr: TStringField;
    DriverOrdersADODS: TADODataSet;
    DrPresOrdersADODS: TADODataSet;
    OrdersPerPeriodADODS: TADODataSet;
    OrdersPerPeriodADODSBOLD_ID: TIntegerField;
    OrdersPerPeriodADODSBOLD_TYPE: TSmallintField;
    OrdersPerPeriodADODSYavl_pochasovym: TIntegerField;
    OrdersPerPeriodADODSKolichestvo_chasov: TBCDField;
    OrdersPerPeriodADODSNachalo_zakaza_data: TDateTimeField;
    OrdersPerPeriodADODSKonec_zakaza_data: TDateTimeField;
    OrdersPerPeriodADODSTelefon_klienta: TStringField;
    OrdersPerPeriodADODSData_podachi: TDateTimeField;
    OrdersPerPeriodADODSZavershyon: TIntegerField;
    OrdersPerPeriodADODSArhivnyi: TIntegerField;
    OrdersPerPeriodADODSUslovn_stoim: TBCDField;
    OrdersPerPeriodADODSAdres_vyzova_vvodim: TStringField;
    OrdersPerPeriodADODSPredvariteljnyi: TIntegerField;
    OrdersPerPeriodADODSData_predvariteljnaya: TDateTimeField;
    OrdersPerPeriodADODSZadeistv_predvarit: TIntegerField;
    OrdersPerPeriodADODSData_po_umolchaniyu: TDateTimeField;
    OrdersPerPeriodADODSSoobsheno_voditelyu: TIntegerField;
    OrdersPerPeriodADODSvypolnyaetsya_voditelem: TIntegerField;
    OrdersPerPeriodADODSotpuskaetsya_dostepcherom: TIntegerField;
    OrdersPerPeriodADODSocenivaetsya_cherez: TIntegerField;
    OrdersPerPeriodADODSadres_sektora: TIntegerField;
    OrdersPerPeriodADODSkonechnyi_sektor_raboty: TIntegerField;
    OrdersPerPeriodADODSsektor_voditelya: TIntegerField;
    OrdersPerPeriodADODSNomer_zakaza: TBCDField;
    OrdersPerPeriodADODSAdres_okonchaniya_zayavki: TStringField;
    OrdersPerPeriodADODSPozyvnoi_ustan: TIntegerField;
    OrdersPerPeriodADODSData_pribytie: TDateTimeField;
    OrdersPerPeriodADODSNomer_skidki: TIntegerField;
    OrdersPerPeriodADODSUstan_pribytie: TIntegerField;
    OrdersPerPeriodADODSPrimechanie: TStringField;
    OrdersPerPeriodADODSSlugebnyi: TIntegerField;
    OrdersPerPeriodADODSotpravlyaetsya: TIntegerField;
    OrdersPerPeriodADODSOpr_s_obsh_linii: TIntegerField;
    OrdersPerPeriodADODSData_na_tochke: TDateTimeField;
    OrdersPerPeriodADODSREMOTE_SET: TIntegerField;
    OrdersPerPeriodADODSREMOTE_INCOURSE: TIntegerField;
    OrdersPerPeriodADODSREMOTE_ACCEPTED: TIntegerField;
    OrdersPerPeriodADODSREMOTE_DRNUM: TIntegerField;
    OrdersPerPeriodADODSDRIVER_SMS_SEND_STATE: TIntegerField;
    OrdersPerPeriodADODSCLIENT_SMS_SEND_STATE: TIntegerField;
    OrdersPerPeriodADODSSMS_SEND_DRNUM: TStringField;
    OrdersPerPeriodADODSSMS_SEND_CLPHONE: TStringField;
    OrdersPerPeriodADODSPriority_counter: TIntegerField;
    OrdersPerPeriodADODSIndivid_order: TIntegerField;
    OrdersPerPeriodADODSIndivid_sending: TIntegerField;
    OrdersPerPeriodADODSSECTOR_ID: TIntegerField;
    OrdersPerPeriodADODSREMOTE_SUMM: TBCDField;
    OrdersPerPeriodADODSREMOTE_SYNC: TIntegerField;
    OrdersPerPeriodADODSLAST_STATUS_TIME: TDateTimeField;
    OrdersPerPeriodADODSNO_TRANSMITTING: TIntegerField;
    OrdersPerPeriodADODSRESTORED: TSmallintField;
    OrdersPerPeriodADODSAUTO_ARHIVED: TSmallintField;
    OrdersPerPeriodADODSWAITING: TIntegerField;
    OrdersPerPeriodADODSdirect_sect_id: TIntegerField;
    OrdersPerPeriodADODSfixed_time: TIntegerField;
    OrdersPerPeriodADODSfixed_summ: TBCDField;
    OrdersPerPeriodADODSon_place: TSmallintField;
    OrdersPerPeriodADODSdr_assign_date: TDateTimeField;
    OrdersPerPeriodADODStm_distance: TIntegerField;
    OrdersPerPeriodADODStm_summ: TBCDField;
    OrdersPerPeriodADODSTARIFF_ID: TIntegerField;
    OrdersPerPeriodADODSOPT_COMB: TLargeintField;
    OrdersPerPeriodADODSOPT_COMB_STR: TStringField;
    OrdersPerPeriodADODSPR_POLICY_ID: TIntegerField;
    procedure DrStateADODSCalcFields(DataSet: TDataSet);
    procedure DataModuleCreate(Sender: TObject);
    function GetFilterFragmentForDrExecReport: Widestring;
  private
    { Private declarations }
  public
    { Public declarations }
    MainRepForDiagramm: Boolean;
  end;

var
  ReportDM: TReportDM;

implementation

{$R *.dfm}

uses HandlesDM, ModelDM, CustDelUnit, ADODMUnit, DrWorkExecTableUnit;

function TReportDM.GetFilterFragmentForDrExecReport: Widestring;
var HasPrevCrit: Boolean;
    res: Widestring;
begin
  HasPrevCrit:=False;
  res:='(';
  if DrWorkExecTableForm.sCheckBox1.Checked then
    begin
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'sector_change_crit','Перенос на сектор')+''') ';
      HasPrevCrit:=True;
    end;
  if DrWorkExecTableForm.sCheckBox2.Checked then
    begin
      if HasPrevCrit then res:=res+' or ';
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'on_line_set_crit','Постановка на линию')+''') ';
      HasPrevCrit:=True;
    end;
  if DrWorkExecTableForm.sCheckBox3.Checked then
    begin
      if HasPrevCrit then res:=res+' or ';
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'on_launch_set_crit','Взял перерыв')+''') ';
      HasPrevCrit:=True;
    end;
  if DrWorkExecTableForm.sCheckBox4.Checked then
    begin
      if HasPrevCrit then res:=res+' or ';
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'on_self_work_set_crit','Взял перерыв с руки')+''')  ';
      HasPrevCrit:=True;
    end;
  if DrWorkExecTableForm.sCheckBox5.Checked then
    begin
      if HasPrevCrit then res:=res+' or ';
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'on_line_from_launch','Снялся с перерыва')+''')  ';
      HasPrevCrit:=True;
    end;
  if DrWorkExecTableForm.sCheckBox6.Checked then
    begin
      if HasPrevCrit then res:=res+' or ';
      res:=res+' (Adres_vyzova_vvodim='''+IniFile.ReadString('develop_2008_year',
                 'end_work_set_crit','Снятие с линии')+''') ';
      HasPrevCrit:=True;
    end;

  if HasPrevCrit then
    res:=res+')'
  else
    res:='';

    AggrDrReportADOQuery.Filtered:=False;
    AggrDrReportADOQuery.Filter:='';

   if HasPrevCrit then
     begin
       AggrDrReportADOQuery.Filter:=res;
       AggrDrReportADOQuery.Filtered:=True;
     end;
   //else
   //  res:='';

   Result:=res;
end;

procedure TReportDM.DataModuleCreate(Sender: TObject);
begin
  ReportDM.RvProject.ProjectFile:=GetCurrentDir+'\Reports\TaxiDispatcher.rav';
  MainRepForDiagramm:=False;
if IniFile.ReadString('BUSINESS_DATA','enable_for_allXML_DEMO','NO')='YES' then
    begin
    end
  else
   begin
    if IniFile.ReadString('BUSINESS_DATA','hybrid_SQLLEV_mode','NO')='YES' then
     begin
       //blhCustOnPeriod.RootHandle:=
       //  nil;
       //blhPresentCust.RootHandle:=
       //  nil;
     end;
   end;

end;

procedure TReportDM.DrStateADODSCalcFields(DataSet: TDataSet);
var min_between: Integer;
begin
  min_between:=DrStateADODSMunutesCount.AsInteger;
  DrStateADODSDeltaStr.Value:= 'Часов - '+IntToStr(min_between div 60)+
    ', минут - '+IntToStr(min_between mod 60);
end;

end.
