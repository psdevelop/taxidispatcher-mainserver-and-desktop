unit OneDriversOnDaysRepSettUnit;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, ComCtrls, BoldComboBox, DB, Grids, DBGrids,
  BoldGrid, BoldSubscription, BoldHandles, BoldRootedHandles,
  BoldAbstractListHandle, BoldCursorHandle, BoldListHandle;

type
  TOneDaysOnRepSettForm = class(TForm)
    DateTimePicker1: TDateTimePicker;
    DateTimePicker2: TDateTimePicker;
    BitBtn1: TBitBtn;
    BoldComboBox1: TBoldComboBox;
    Label1: TLabel;
    CheckBox1: TCheckBox;
    procedure DateTimePicker2Change(Sender: TObject);
    procedure DateTimePicker1Change(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  OneDaysOnRepSettForm: TOneDaysOnRepSettForm;

implementation

{$R *.dfm}

uses HandlesDM, ReportDMUnit, BusinessClasses, DateUtils;

procedure TOneDaysOnRepSettForm.BitBtn1Click(Sender: TObject);
begin
 if CheckBox1.Checked then
 begin
   try
     StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Cvet_nachavshihsya);
   except
     ShowMessage('Неверное значение времени снятия отчётности, по умолчанию будет установлено 08:00:00.');
     (BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Cvet_nachavshihsya:=
       '08:00:00';
   end;
   BoldHandlesDM.bvhStarDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker1.Date)+
     StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Cvet_nachavshihsya));
   BoldHandlesDM.bvhEndDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker2.Date)+
     StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Cvet_nachavshihsya));
 end
 else begin
  BoldHandlesDM.bvhStarDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker1.Date));
  BoldHandlesDM.bvhEndDate.Value.SetAsVariant(EndOfTheDay(DateTimePicker2.Date));
 end;

  try

    BoldHandlesDM.blhAllDriversCust.RootHandle:=
      BoldHandlesDM.blhAllDrivers;
    ReportDM.bdsOneTaxOnDaysMoving.BoldHandle:=BoldHandlesDM.blhAllDriversCust;
    ReportDM.bdsOneTaxOnDaysMoving.Active:=True;
    ReportDM.OneTaxOnDaysCDS.Active:=False;
    ReportDM.OneTaxOnDaysCDS.Active:=True;
    ReportDM.OneTaxOnDaysCDS.Active:=False;
    ReportDM.OneTaxOnDaysCDS.Active:=True;

    ReportDM.blhPresentCust.RootHandle:=
      BoldHandlesDM.blhAllDrivers;
    ReportDM.bdsPresentCusts.BoldHandle:=ReportDM.blhPresentCust;
    ReportDM.bdsPresentCusts.Active:=True;
    ReportDM.cdsPresentCust.Active:=False;
    ReportDM.cdsPresentCust.Active:=True;
    ReportDM.cdsPresentCust.Active:=False;
    ReportDM.cdsPresentCust.Active:=True;


    ReportDM.RvProject.SetParam('StartDate',DateToStr(DateTimePicker1.Date));
    ReportDM.RvProject.SetParam('EndDate',DateToStr(DateTimePicker2.Date));
    ReportDM.RvProject.SetParam('DriverName',(BoldHandlesDM.blhAllDrivers.CurrentElement as TVoditelj).Imya);
    ReportDM.RvProject.ExecuteReport('OneDriverReport');
  finally
    ReportDM.bdsOneTaxOnDaysMoving.BoldHandle:=nil;
    ReportDM.bdsOneTaxOnDaysMoving.Active:=False;
    ReportDM.bdsPresentCusts.BoldHandle:=nil;
    ReportDM.bdsPresentCusts.Active:=False;
    BoldHandlesDM.blhAllDriversCust.RootHandle:=
      nil;
    ReportDM.blhPresentCust.RootHandle:=
      nil;  
  end;
  Close;
end;

procedure TOneDaysOnRepSettForm.FormCreate(Sender: TObject);
begin
  DateTimePicker1.Date:=IncDay(Today,-7);
  DateTimePicker2.Date:=Today;
  BoldHandlesDM.bvhStarDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker1.Date));
  BoldHandlesDM.bvhEndDate.Value.SetAsVariant(EndOfTheDay(DateTimePicker2.Date));
end;

procedure TOneDaysOnRepSettForm.DateTimePicker1Change(Sender: TObject);
begin
  BoldHandlesDM.bvhStarDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker1.Date));
  BoldHandlesDM.bvhEndDate.Value.SetAsVariant(EndOfTheDay(DateTimePicker2.Date));
end;

procedure TOneDaysOnRepSettForm.DateTimePicker2Change(Sender: TObject);
begin
  BoldHandlesDM.bvhStarDate.Value.SetAsVariant(StartOfTheDay(DateTimePicker1.Date));
  BoldHandlesDM.bvhEndDate.Value.SetAsVariant(EndOfTheDay(DateTimePicker2.Date));
end;

end.
