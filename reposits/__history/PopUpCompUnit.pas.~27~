unit PopUpCompUnit;

interface

uses
  SysUtils, Classes, Menus, BoldElements;

type
  TPopUpDM = class(TDataModule)
    EngineListMemoPopupMenu: TPopupMenu;
    N1: TMenuItem;
    AllDriverPopupMenu: TPopupMenu;
    N2: TMenuItem;
    BottomStackPopupMenu: TPopupMenu;
    N3: TMenuItem;
    N4: TMenuItem;
    N5: TMenuItem;
    N6: TMenuItem;
    SetOnLinePopupMenu: TPopupMenu;
    N7: TMenuItem;
    MainStatusBarPopupMenu: TPopupMenu;
    N15: TMenuItem;
    N16: TMenuItem;
    RemStatPopupMenu: TPopupMenu;
    SetFirstAttemptMN: TMenuItem;
    AllowOnHandMN: TMenuItem;
    CloseComplOrdMN: TMenuItem;
    AllowDrCancelMN: TMenuItem;
    ResetOrdRemStatMN: TMenuItem;
    GoPretendentsMN: TMenuItem;
    OrderInfoMN: TMenuItem;
    SendDispCancelMN: TMenuItem;
    N9: TMenuItem;
    EventsPopupMenu: TPopupMenu;
    N17: TMenuItem;
    N18: TMenuItem;
    N19: TMenuItem;
    procedure N19Click(Sender: TObject);
    procedure N18Click(Sender: TObject);
    procedure N17Click(Sender: TObject);
    procedure N9Click(Sender: TObject);
    procedure ResetOrdRemStatMNClick(Sender: TObject);
    procedure AllowDrCancelMNClick(Sender: TObject);
    procedure SendDispCancelMNClick(Sender: TObject);
    procedure CloseComplOrdMNClick(Sender: TObject);
    procedure AllowOnHandMNClick(Sender: TObject);
    procedure GoPretendentsMNClick(Sender: TObject);
    procedure SetFirstAttemptMNClick(Sender: TObject);
    procedure RemStatPopupMenuPopup(Sender: TObject);
    procedure N16Click(Sender: TObject);
    procedure N15Click(Sender: TObject);
    procedure N7Click(Sender: TObject);
    procedure BottomStackPopupMenuPopup(Sender: TObject);
    procedure N5Click(Sender: TObject);
    procedure N4Click(Sender: TObject);
    procedure N6Click(Sender: TObject);
    procedure N3Click(Sender: TObject);
    procedure DataModuleCreate(Sender: TObject);
    procedure PrintWayBlank(DBE: TBoldElement);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  PopUpDM: TPopUpDM;
  FindTreeViewBE: TBoldElement;
  MonthNameList: TStringList;

implementation

{$R *.dfm}

uses MainForm, ReportDMUnit, OnLineNumSetUnit,
  Variants, BoldAttributes, ReleaseStructUnit, HandlesDM,
  Dialogs, BusinessClasses, BoldOtherHandlCompUnit, ModelDM, DateUtils,
  ADODMUnit, ShellAPI;

procedure TPopUpDM.PrintWayBlank(DBE: TBoldElement);
begin
try
  ReportDM.RvProject.SetParam('WLFuelAdding','');//FloatToStr((BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Kolich_vyd_benzina));
  ReportDM.RvProject.SetParam('WL1StName',(BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Napravlenie_1);
  ReportDM.RvProject.SetParam('WL2StName',(BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Napravlenie_2);
  ReportDM.RvProject.SetParam('WL3StName',(BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Napravlenie_3);
  ReportDM.RvProject.SetParam('WLOrganization',(BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Namen_organizacii);
  ReportDM.RvProject.SetParam('WLDrWorkComm',(BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).Komment_k_rabote);
  ReportDM.RvProject.SetParam('WLNum',IntToStr(BoldModelDM.GetNewWayBlankNum));

  ReportDM.RvProject.SetParam('WLDay',IntToStr(DayOf(Today)));
  ReportDM.RvProject.SetParam('WLYear',IntToStr(YearOf(Today)));
  ReportDM.RvProject.SetParam('WLMonth',MonthNameList.Strings[(MonthOf(Today))-1]);

  ReportDM.RvProject.SetParam('WLBegTime','08:00');
  ReportDM.RvProject.SetParam('WLEndTime','20:00');

  ReportDM.RvProject.SetParam('WLAMName',(DBE as TVoditelj).Marka_avtomobilya);
  ReportDM.RvProject.SetParam('WLDrName',(DBE as TVoditelj).Imya);
  ReportDM.RvProject.SetParam('WLAMStateNum',(DBE as TVoditelj).Gos_nomernoi_znak);
  ReportDM.RvProject.SetParam('WLAMPlaceNum',IntToStr((DBE as TVoditelj).Pozyvnoi));
  ReportDM.RvProject.SetParam('WLLisCardComm',(DBE as TVoditelj).Licenzionnaya_kart);
  ReportDM.RvProject.SetParam('WLDrDocID',(DBE as TVoditelj).Ulica);
  ReportDM.RvProject.SetParam('WLDrClass',(DBE as TVoditelj).Klass_vych);
  ReportDM.RvProject.ExecuteReport('NewWayBlankReport');
except
end;
end;

procedure TPopUpDM.DataModuleCreate(Sender: TObject);
begin
  MonthNameList:=TStringList.Create;
  MonthNameList.Add('Январь');
  MonthNameList.Add('Февраль');
  MonthNameList.Add('Март');
  MonthNameList.Add('Апрель');
  MonthNameList.Add('Май');
  MonthNameList.Add('Июнь');
  MonthNameList.Add('Июль');
  MonthNameList.Add('Август');
  MonthNameList.Add('Сентябрь');
  MonthNameList.Add('Октябрь');
  MonthNameList.Add('Ноябрь');
  MonthNameList.Add('Декабрь');
end;

procedure TPopUpDM.N3Click(Sender: TObject);
begin
  if AllQueueDrNum>0 then
   begin

    if not ADOConnectDM.SendSQL('UPDATE Voditelj SET '+
				'Na_pereryve=1 WHERE Pozyvnoi='+
        IntToStr(AllQueueDrNum)) then
					ShowMessage('Неудачная установка признака НА ПЕРЕРЫВЕ водителя!')
   end;
end;

procedure TPopUpDM.N6Click(Sender: TObject);
begin
 if AllQueueDrNum>0 then
   begin

    if not ADOConnectDM.SendSQL('UPDATE Voditelj SET '+
				'V_rabote=0 WHERE Pozyvnoi='+
        IntToStr(AllQueueDrNum)) then
					ShowMessage('Неудачная установка признака НЕ НА ЛИНИИ водителя!')

   end;
end;

procedure TPopUpDM.N4Click(Sender: TObject);
begin

   if AllQueueDrNum>0 then
   begin

    if not ADOConnectDM.SendSQL('UPDATE Voditelj SET '+
				'Zanyat_drugim_disp=1 WHERE Pozyvnoi='+
        IntToStr(AllQueueDrNum)) then
					ShowMessage('Неудачная установка признака ЗАНЯТ водителя!')

   end;

end;

procedure TPopUpDM.N5Click(Sender: TObject);
begin
   if AllQueueDrNum>0 then
   begin

    if not ADOConnectDM.SendSQL('UPDATE Voditelj SET '+
				'Zanyat_drugim_disp=0 WHERE Pozyvnoi='+
        IntToStr(AllQueueDrNum)) then
					ShowMessage('Неудачная установка признака СВОБОДЕН водителя!')

   end;
end;

procedure TPopUpDM.BottomStackPopupMenuPopup(Sender: TObject);
begin
  if CurrBottomBE<>nil then
   begin
     if BoldModelDM.GetLocalDrBusy(
      (CurrBottomBE as TVoditelj).Pozyvnoi) then
      begin
       BottomStackPopupMenu.Items[1].Checked:=True;
       BottomStackPopupMenu.Items[2].Checked:=False;
      end
     else
      begin
       BottomStackPopupMenu.Items[1].Checked:=False;
       BottomStackPopupMenu.Items[2].Checked:=True;
      end;
     if (CurrBottomBE as TVoditelj).Na_pereryve then
      begin
       BottomStackPopupMenu.Items[0].Checked:=True;
      end
     else
      begin
       BottomStackPopupMenu.Items[0].Checked:=False;
      end;
   end;
end;

procedure TPopUpDM.N7Click(Sender: TObject);
begin
  OnLineSetNumForm.ShowModal;
  if StrToIntDef(OnLineSetNumForm.sEdit1.Text,-1)<>-1 then
    begin
      ADOConnectDM.ChechDriverBalanceStatus(
        StrToInt(OnLineSetNumForm.sEdit1.Text));
      ADOConnectDM.CheckDrUseDynamicBalanceStatus(
        StrToInt(OnLineSetNumForm.sEdit1.Text));

      if not ADOConnectDM.SendSQLModel('UPDATE Voditelj SET '+
				'V_rabote=1 WHERE Pozyvnoi='+
        IntToStr(StrToIntDef(OnLineSetNumForm.sEdit1.Text,-1))) then
					ShowMessage('Неудачная установка признака НА ЛИНИИ водителя!');
    end
  else
    ShowMessage('Некорректное числовое значение!');  
end;

procedure TPopUpDM.N15Click(Sender: TObject);
begin
  try
    StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov);
  except
    (BoldHandlesDM.blhDriversUnion.CurrentElement as TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov:='08:00:00';
  end;
  if IncHour((StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+
      StartOfTheDay(Today)),-12)>=(Today+Time) then
      begin
        ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value:=IncHour(StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+StartOfTheDay(Today),-24);
      end
   else if (StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+
      StartOfTheDay(Today))>=(Today+Time) then
      begin
        ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value:=IncHour(StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+StartOfTheDay(Today),-12);
      end
   else if IncHour((StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+
      StartOfTheDay(Today)),+12)>=(Today+Time) then
      begin
        ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value:=StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+StartOfTheDay(Today);
      end
   else if IncHour((StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+
      StartOfTheDay(Today)),+24)>=(Today+Time) then
      begin
        ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value:=IncHour(StrToTime((BoldHandlesDM.blhDriversUnion.CurrentElement as
    TObjekt_vyborki_otchyotnosti).vr_smeny_dispetcherov)+StartOfTheDay(Today),+12);
      end
   else
     begin
     end;
  ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('enddt').Value:=
    IncHour(ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value,+12);
  ShowMessage('Заявок принятых за период с '+
    DateTimeToStr(ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value)+' по '+
    DateTimeToStr(ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('enddt').Value)+'.');
  try
    ADOConnectDM.CustAggregateSummADOQuery.Active:=
      False;
    ADOConnectDM.CustAggregateSummADOQuery.Active:=
      True;
    FirstForm.StatusBar.Panels[2].Text:=
      'Подсч. заявок - '+
        IntToStr(ADOConnectDM.CustAggregateSummADOQuery.FindField
          ('ccount').AsInteger);
  except
    ShowMessage('Неудачное выполнение запроса на суммарное количество заявок!');
  end;
end;

procedure TPopUpDM.N16Click(Sender: TObject);
begin
 try
  ADOConnectDM.CurrUserFirstOnLastsSysEnterADOQuery.
    Active:=False;
  ADOConnectDM.CurrUserFirstOnLastsSysEnterADOQuery.
    Active:=True;
  if ADOConnectDM.CurrUserFirstOnLastsSysEnterADOQuery.RecordCount>0 then
    begin
      ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('stdt').Value:=
        ADOConnectDM.CurrUserFirstOnLastsSysEnterADOQuery.
          FindField('late_enter').AsDateTime;
      ADOConnectDM.CustAggregateSummADOQuery.Parameters
          .ParamByName('enddt').Value:=Today+Time;
      ShowMessage('Заявок принятых за период с '+
        DateTimeToStr(ADOConnectDM.CustAggregateSummADOQuery.Parameters
            .ParamByName('stdt').Value)+' по '+
        DateTimeToStr(ADOConnectDM.CustAggregateSummADOQuery.Parameters
            .ParamByName('enddt').Value)+'.');
      try
       ADOConnectDM.CustAggregateSummADOQuery.Active:=
        False;
       ADOConnectDM.CustAggregateSummADOQuery.Active:=
        True;
       FirstForm.StatusBar.Panels[2].Text:=
         'Подсч. заявок - '+
          IntToStr(ADOConnectDM.CustAggregateSummADOQuery.FindField
            ('ccount').AsInteger);
       except
         ShowMessage('Неудачное выполнение запроса на суммарное количество заявок!');
       end;
    end
  else
    ShowMessage('Не обнаружена ни одна запись входа текущего пользователя!');
  except
    ShowMessage('Неудачно проведен запрос на последний вход текущего пользователя!');
  end;
end;

procedure TPopUpDM.RemStatPopupMenuPopup(Sender: TObject);
begin
  SetFirstAttemptMN.Enabled:=False;
  GoPretendentsMN.Enabled:=False;
  AllowOnHandMN.Enabled:=False;
  CloseComplOrdMN.Enabled:=False;
  SendDispCancelMN.Enabled:=False;
  AllowDrCancelMN.Enabled:=False;
  ResetOrdRemStatMN.Enabled:=False;
  if ADOConnectDM.ActiveCustADOQuery.RecordCount>0 then
    begin
      LastSelRemStatOrderId:=ADOConnectDM.
        ActiveCustADOQuery.FieldByName('BOLD_ID').AsInteger;
      LastSelOrdRemStatVal:=ADOConnectDM.
        ActiveCustADOQuery.FieldByName('REMOTE_SET').AsInteger;
      OrderInfoMN.Caption:='Заказ № '+ ADOConnectDM.
        ActiveCustADOQuery.FieldByName('Nomer_zakaza').AsString+
        ' '+ADOConnectDM.ActiveCustADOQuery.
        FieldByName('Telefon_klienta').AsString+':'+
        ADOConnectDM.ActiveCustADOQuery.
        FieldByName('Adres_vyzova_vvodim').AsString;
      //OrderInfoMN.
        case (LastSelOrdRemStatVal) of
          ORDER_NO_REM_STATUS:
          begin
          end;
      
      ORDER_INDIVID_TAKE: //= 1;
      begin
        //FieldByName('REMOTE_INSTR').
        //  AsString:='Рассыл одному, можно назначить';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_SECTOR_PUBLISHING: //= 2;
      begin
        //FieldByName('REMOTE_INSTR').
        //  AsString:='Рассыл сектору, можно назначить';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ALL_PUBLISHING: //= 3;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Рассыл всем, можно назначить';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_PUBLUSHED_WAIT: //= 4;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Рассыл завершен, назначьте';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_IS_OCCUPED: //= 5;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Есть претенденты, назначьте';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_OCCUPED_DENY: //= 6;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Есть претенденты, назначьте';
		SetFirstAttemptMN.Enabled:=True;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_OCCUPED_ALLOW: //= 7;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дано разрешение';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_BUSY: //= 8; //???
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='На исполнении';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ONHAND_ALLOW: //= 9;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дано разрешение с руки';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ONHAND_ACTIVE: //= 10;	?????
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='На исполнении';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=False;
      end;

      ORDER_DISP_CANCEL: //= 11;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Диспетчер отменяет';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DISP_CANCEL_DR_INCOURSE: //= 12;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Вод. подтв. отмену дисп.';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DRV_CANCEL: //= 13;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Водитель отменяет';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=True;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DRV_CANCEL_DISP_ALLOW: //= 14;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дисп. подтв. отмену вод.';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DRV_COMPLETE: //= 15;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Водитель отчитался';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=True;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_COMLETE_ALLOW: //= 16;
      begin
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;
  
      ORDER_ALLOW_ASK_WAIT: //= 17;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дано разрешение, ждем';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=True;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ONHAND_ALLOW_ASK_WAIT: //= 18;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дано разрешение с руки, ждем';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DISP_CANCEL_ASK_WAIT: //= 19;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Диспетчер отменил, ждем';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_CLOSE_ERROR: //= 20;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Ошибка отчета';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_DRCANCEL_DENY: //= 21;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Отмена водителем не принята';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_INWORKING_WAIT: //= 22;
      begin
      end;

      ORDER_ONHAND_ATTEPMT: //= 23;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Просят с руки';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=True;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=True;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ONHAND_DENY: //= 24;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Отказано с руки';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_ONHAND_ALLOW_USER_WAIT: //= 25;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Просят с руки, подтвердите';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;

      ORDER_COMPLETE_ALLOW_USER_WAIT: //= 26;
      begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Дан отчет, подтвердите';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;
	  
	  ORDER_CLOSE_ASK_WAIT:
	  begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Отчет принят, закрытие...';
		SetFirstAttemptMN.Enabled:=False;
		GoPretendentsMN.Enabled:=False;
		AllowOnHandMN.Enabled:=False;
		CloseComplOrdMN.Enabled:=False;
		SendDispCancelMN.Enabled:=False;
		AllowDrCancelMN.Enabled:=False;
		ResetOrdRemStatMN.Enabled:=True;
      end;
  
      ORDER_CLOSE: //= 100;
	  begin
		//FieldByName('REMOTE_INSTR').
        //  AsString:='Заявка закрыта';
	  end;
		  
          else
          begin
          end;
        end;
    end
    else
    begin
      LastSelRemStatOrderId:=-1;
      LastSelOrdRemStatVal:=-1;
      OrderInfoMN.Caption:='Заказ не выделен...';
    end;
end;

procedure TPopUpDM.SetFirstAttemptMNClick(Sender: TObject);
begin
  //Диспетчер разрешает отправить первого ответившего
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_OCCUPED_ALLOW);
end;

procedure TPopUpDM.GoPretendentsMNClick(Sender: TObject);
begin
  //Диспетчер собирается выбрать из обновленного списка претендентов
  if ADOConnectDM.ActiveCustADOQuery.RecordCount>0 then
       begin
          ADOConnectDM.ReloadCurrOrderOccupAttempts
            (ADOConnectDM.ActiveCustADOQuery.
            FindField('BOLD_ID').AsInteger);
          ReleaseStructForm.PretendsTabSheet.Show;
          ReleaseStructForm.PretendsDBGrid.SetFocus;
       end
       else
        ShowMessage('Не выделено активной заявки!');
end;

procedure TPopUpDM.AllowOnHandMNClick(Sender: TObject);
begin
  //
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_ONHAND_ALLOW);
end;

procedure TPopUpDM.CloseComplOrdMNClick(Sender: TObject);
begin
  //
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_CLOSE);
end;

procedure TPopUpDM.SendDispCancelMNClick(Sender: TObject);
begin
  //
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_DISP_CANCEL);
end;

procedure TPopUpDM.AllowDrCancelMNClick(Sender: TObject);
begin
  //
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_DRV_CANCEL_DISP_ALLOW);
end;

procedure TPopUpDM.ResetOrdRemStatMNClick(Sender: TObject);
begin
  //
  ADOConnectDM.ManualSetCurrOrderRemoteStatus(
    LastSelRemStatOrderId,
    ORDER_NO_REM_STATUS);
end;

procedure TPopUpDM.N9Click(Sender: TObject);
begin
  if AllQueueDrNum>0 then
   begin
    if not ADOConnectDM.SendSQL('UPDATE Voditelj SET '+
				'Na_pereryve=1 WHERE Pozyvnoi='+
        IntToStr(AllQueueDrNum)) then
					ShowMessage('Неудачная установка признака НА ПЕРЕРЫВЕ водителя!')
   end;
end;

procedure TPopUpDM.N17Click(Sender: TObject);
begin
  try
    ADOConnectDM.CloseEventADOC.Parameters.
      ParamByName('eid').Value:=
    ADOConnectDM.ActiveEventsADODS.FieldByName(
      'EVENT_ID').AsInteger;
    ADOConnectDM.CloseEventADOC.Execute;
    ADOConnectDM.ReloadActiveEvents;
  except on E: Exception do
    ShowMessage('Ошибка закрытия события! '+E.Message);
  end;
end;

procedure TPopUpDM.N18Click(Sender: TObject);
begin
  if AllQueueDrNum>0 then
   begin

      ADOConnectDM.setDriverGPSCRequStatus(1, AllQueueDrNum);

   end;
end;

procedure TPopUpDM.N19Click(Sender: TObject);
begin
   ShellExecute(FirstForm.Handle, 'open',
  PAnsiChar('http://static-maps.yandex.ru/1.x/?l=map&pt='+
    StringReplace(ADOConnectDM.ActiveEventsADODS.
    FieldByName('LONGITUDE').AsString,
   ',','.',[rfReplaceAll])+','+
    StringReplace(ADOConnectDM.ActiveEventsADODS.
   FieldByName('LATITUDE').AsString,
   ',','.',[rfReplaceAll])+',pmntl1&z=15', nil, nil, SW_NORMAL);
end;

end.
